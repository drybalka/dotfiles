HISTFILE=$HOME/.cache/zsh_history
HISTSIZE=1000
SAVEHIST=1000
unsetopt beep
bindkey -v
setopt HIST_IGNORE_DUPS
setopt share_history

zstyle :compinstall filename $HOME/.zshrc
autoload -Uz compinit
compinit -d $HOME/.cache/zcompdump

# History search
autoload -Uz up-line-or-beginning-search down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

# Change cursor shape for different vi modes.
KEYTIMEOUT=5 # Remove mode switching delay.
function zle-keymap-select {
  if [[ ${KEYMAP} == vicmd ]] ||
     [[ $1 = 'block' ]]; then
    echo -ne '\e[2 q'
  elif [[ ${KEYMAP} == main ]] ||
       [[ ${KEYMAP} == viins ]] ||
       [[ ${KEYMAP} = '' ]] ||
       [[ $1 = 'beam' ]]; then
    echo -ne '\e[6 q'
  fi
}
zle -N zle-keymap-select
zle-line-init() {
    echo -ne "\e[6 q"
}
zle -N zle-line-init
echo -ne '\e[6 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[6 q' ;} # Use beam shape cursor for each new prompt.

# Standard key bindings
typeset -g -A key

key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Insert]="${terminfo[kich1]}"
key[Backspace]="${terminfo[kbs]}"
key[Delete]="${terminfo[kdch1]}"
key[Up]="${terminfo[kcuu1]}"
key[Down]="${terminfo[kcud1]}"
key[Left]="${terminfo[kcub1]}"
key[Right]="${terminfo[kcuf1]}"
key[PageUp]="${terminfo[kpp]}"
key[PageDown]="${terminfo[knp]}"
key[Shift-Tab]="${terminfo[kcbt]}"
key[Control-Left]="${terminfo[kLFT5]}"
key[Control-Right]="${terminfo[kRIT5]}"

# setup key accordingly
[[ -n "${key[Home]}"      ]] && bindkey -- "${key[Home]}"       beginning-of-line
[[ -n "${key[End]}"       ]] && bindkey -- "${key[End]}"        end-of-line
[[ -n "${key[Insert]}"    ]] && bindkey -- "${key[Insert]}"     overwrite-mode
[[ -n "${key[Backspace]}" ]] && bindkey -- "${key[Backspace]}"  backward-delete-char
[[ -n "${key[Delete]}"    ]] && bindkey -- "${key[Delete]}"     delete-char
[[ -n "${key[Up]}"        ]] && bindkey -- "${key[Up]}"         up-line-or-beginning-search
[[ -n "${key[Down]}"      ]] && bindkey -- "${key[Down]}"       down-line-or-beginning-search
[[ -n "${key[Left]}"      ]] && bindkey -- "${key[Left]}"       backward-char
[[ -n "${key[Right]}"     ]] && bindkey -- "${key[Right]}"      forward-char
[[ -n "${key[PageUp]}"    ]] && bindkey -- "${key[PageUp]}"     beginning-of-buffer-or-history
[[ -n "${key[PageDown]}"  ]] && bindkey -- "${key[PageDown]}"   end-of-buffer-or-history
[[ -n "${key[Shift-Tab]}" ]] && bindkey -- "${key[Shift-Tab]}"  reverse-menu-complete
[[ -n "${key[Control-Left]}"  ]] && bindkey -- "${key[Control-Left]}"  backward-word
[[ -n "${key[Control-Right]}" ]] && bindkey -- "${key[Control-Right]}" forward-word

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} && ${+terminfo[rmkx]} )); then
	autoload -Uz add-zle-hook-widget
	function zle_application_mode_start { echoti smkx }
	function zle_application_mode_stop { echoti rmkx }
	add-zle-hook-widget -Uz zle-line-init zle_application_mode_start
	add-zle-hook-widget -Uz zle-line-finish zle_application_mode_stop
fi

# Aliases
alias ls='eza --group-directories-first --sort=extension'
alias l='eza -lg --group-directories-first --sort=extension --git'
alias la='eza -lag --group-directories-first --sort=extension --git'
alias lt='eza -l --group-directories-first --sort=extension --tree --level=2 --git'
alias lT='eza -l --group-directories-first --sort=extension --tree --git'
alias rg='rg --pretty --smart-case'

alias -g ...="../.."
alias -g ....="../../.."
alias -g .....="../../../.."
alias dotfiles="git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME"

fd () {
    /usr/bin/fd "$@" -X eza -ld --group-directories-first --sort=extension --git
}

# Plugins
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh

# source /usr/share/zsh/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh
# [[ -n "${key[Up]}"        ]] && bindkey -- "${key[Up]}"         history-substring-search-up
# [[ -n "${key[Down]}"      ]] && bindkey -- "${key[Down]}"       history-substring-search-down

# Status line
if [[ $XDG_SESSION_TYPE == "wayland" ]]
then
  source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme
  source ~/.config/p10k.zsh
fi

# Set correct gpg tty for pinenetry
gpg-connect-agent UPDATESTARTUPTTY /bye >/dev/null
